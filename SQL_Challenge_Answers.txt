Sakila Challenge SQL:

1. List all actors.
SELECT first_name, last_name FROM actor;

2. Find the surname of the actor with the forename 'John'.
SELECT last_name FROM actor WHERE first_name = 'John';

3. Find all actors with surname 'Neeson'.
SELECT first_name FROM actor WHERE last_name = "Neeson";

4. Find all actors with ID numbers divisible by 10.
SELECT first_name, last_name FROM actor WHERE MOD(actor_id, 10) = 0;

5. What is the description of the movie with an ID of 100?
SELECT description FROM film WHERE film_id = 100;

6. Find every R-rated movie.
SELECT title FROM film WHERE rating = 'R';

7. Find every non-R-rated movie.
SELECT title FROM film WHERE rating != 'R';

8. Find the ten shortest movies.
SELECT title FROM film ORDER BY length ASC LIMIT 10;

9. Find the movies with the longest runtime, without using LIMIT.
SELECT * FROM film WHERE length = (SELECT MAX(length) FROM film);

10. Find all movies that have deleted scenes.
SELECT * FROM film WHERE special_features LIKE '%Deleted Scenes%';

11. Using HAVING, reverse-alphabetically list the last names that are not repeated.
SELECT DISTINCT last_name FROM actor HAVING last_name IS NOT NULL ORDER BY last_name DESC;

12. Using HAVING, list the last names that appear more than once, from highest to lowest frequency.
SELECT COUNT(actor_id), last_name FROM actor GROUP BY last_name HAVING COUNT(actor_id) > 1 ORDER BY COUNT(actor_id) DESC;

13. Which actor has appeared in the most films?
SELECT actor_id, COUNT(film_id) FROM film_actor GROUP BY actor_id ORDER BY COUNT(film_id) DESC;     - My method
SELECT film_actor.actor_id, actor_info.first_name, actor_info.last_name, COUNT(film_actor.actor_id) AS films FROM film_actor JOIN actor_info ON film_actor.actor_id = actor_info.actor_id GROUP BY film_actor.actor_id ORDER BY COUNT(film_actor.actor_id) DESC LIMIT 1;     - Teacher's method

14. When is 'Academy Dinosaur' due?
SELECT release_year FROM film WHERE title = 'Academy Dinosaur';

15. What is the average runtime of all films?
SELECT AVG(length) FROM film;

16. List the average runtime for every film category.
SELECT category, AVG(length) FROM film_list GROUP BY category;

17. List all movies featuring a robot.
SELECT title, description FROM film WHERE description LIKE '%robot%';

18. How many movies were released in 2010?
SELECT COUNT(film_id) FROM film WHERE release_year = 2010;

19. Find the titles of all the horror movies.
SELECT title, category FROM film_list WHERE CATEGORY = 'Horror';

20. List the full name of the staff member with the ID of 2.
SELECT first_name, last_name, staff_id FROM staff WHERE staff_id = 2;

21. List all the movies that Fred Costner has appeared in.
SELECT title, actors FROM film_list WHERE actors LIKE '%Fred Costner%';

22. How many distinct countries are there?
SELECT DISTINCT COUNT(country) FROM country;

23. List the name of every language in reverse-alphabetical order.
SELECT name FROM language ORDER BY name DESC;

24. List the full names of every actor whose surname ends with '-son' in alphabetical order by their forename.
SELECT first_name, last_name FROM actor WHERE last_name LIKE '%son' ORDER BY first_name ASC;

25. Which category contains the most films?
SELECT category, COUNT(category) FROM film_list GROUP BY category ORDER BY COUNT(category) DESC LIMIT 1;


World Challenge SQL:

1. Using COUNT, get the number of cities in the USA.
SELECT COUNT(CountryCode) FROM city WHERE CountryCode = (SELECT code FROM country WHERE name = 'United States');

2. Find out the population and life expectancy for people in Argentina.
SELECT Population, LifeExpectancy FROM country WHERE name = 'Argentina';

3. Using IS NOT NULL, ORDER BY, and LIMIT, which country has the highest life expectancy?
SELECT Name, LifeExpectancy FROM country WHERE LifeExpectancy IS NOT NULL ORDER BY LifeExpectancy DESC LIMIT 1;

4. Using JOIN ... ON, find the capital city of Spain.
SELECT city.Name, country.Name FROM city JOIN country ON city.CountryCode=country.Code WHERE country.Name = 'Spain' AND country.Capital = city.ID;

5. Using JOIN ... ON, list all the languages spoken in the Southeast Asia region.
SELECT DISTINCT countrylanguage.Language FROM countrylanguage JOIN country ON countrylanguage.CountryCode=country.Code WHERE country.Region = "Southeast Asia";

6. Using a single query, list 25 cities around the world that start with the letter F.
SELECT Name FROM city WHERE Name LIKE 'F%' LIMIT 25;

7. Using COUNT and JOIN ... ON, get the number of cities in China.
SELECT COUNT(city.ID) FROM city JOIN country ON city.CountryCode=country.Code WHERE country.Name = 'China';

8. Using IS NOT NULL, ORDER BY, and LIMIT, which country has the lowest population? Discard non-zero populations.
SELECT Name, Population FROM country WHERE Population IS NOT NULL AND Population != 0 ORDER BY Population ASC LIMIT 1;

9. Using aggregate functions, return the number of countries the database contains.
SELECT COUNT(Code) FROM country;

10. What are the top ten largest countries by area?
SELECT Name, SurfaceArea FROM country ORDER BY SurfaceArea DESC LIMIT 10;

11. List the five largest cities by population in Japan.
SELECT city.Name, city.Population FROM city JOIN country ON city.CountryCode=country.Code WHERE country.Name = 'Japan' ORDER BY city.Population DESC LIMIT 5;

12. List the names and country codes of every country with Elizabeth II as its Head of State. You will need to fix the mistake first!
UPDATE country SET HeadOfState = 'Elizabeth II' WHERE HeadOfState = "Elisabeth II";
SELECT Name FROM country WHERE HeadOfState = "Elizabeth II";

13. List the top ten countries with the smallest population-to-area ratio. Discard any countries with a ratio of 0.
SELECT Name, Population / SurfaceArea FROM country WHERE Population / SurfaceArea !=0 ORDER BY Population / SurfaceArea ASC LIMIT 10;

14. List every unique world language.
SELECT DISTINCT Language FROM countrylanguage;

15. List the names and GNP of the world's top 10 richest countries.
SELECT Name, GNP FROM country ORDER BY GNP DESC LIMIT 10;

16. List the names of, and number of languages spoken by, the top ten most multilingual countries.
SELECT country.Name, COUNT(countrylanguage.Language) FROM country JOIN countrylanguage ON country.Code=countrylanguage.CountryCode GROUP BY country.Name ORDER BY COUNT(countrylanguage.Language) DESC LIMIT 10;

17. List every country where over 50% of its population can speak German
SELECT country.Name, countrylanguage.Percentage FROM country JOIN countrylanguage ON country.Code=countrylanguage.CountryCode WHERE countrylanguage.Language = 'German' AND countrylanguage.Percentage > 50 ORDER BY countrylanguage.Percentage DESC;

18. Which country has the worst life expectancy? Discard zero or null values.
SELECT Name, LifeExpectancy FROM country WHERE LifeExpectancy IS NOT NULL OR LifeExpectancy != 0 ORDER BY LifeExpectancy ASC LIMIT 1;

19. List the top three most common government forms.
SELECT GovernmentForm, COUNT(GovernmentForm) FROM country GROUP BY GovernmentForm ORDER BY COUNT(GovernmentForm) DESC LIMIT 3;

20. How many countries have gained independence since records began?
SELECT COUNT(Code) FROM country WHERE IndepYear IS NOT NULL;


Movielens Challenge SQL:

1. List the titles and release dates of movies released between 1983-1993 in reverse chronological order.
SELECT title, release_date FROM movies WHERE release_date BETWEEN "1983-01-01" AND "1993-12-31" ORDER BY release_date DESC;

2. Without using LIMIT, list the titles of the movies with the lowest average rating.
SELECT movies.title, ratings.rating FROM ratings JOIN movies ON ratings.id=movies.id WHERE ratings.rating = 1 ORDER BY ratings.rating ASC;     - My solution
SELECT movies.title, ratings.rating FROM ratings JOIN movies ON ratings.movie_id=movies.id WHERE ratings.rating = (SELECT MIN(rating) FROM ratings) GROUP BY ratings.movie_id;     - Teacher's solution

3. List the unique records for Sci-Fi movies where male 24-year-old students have given 5-star ratings.
SELECT DISTINCT *  FROM movies JOIN genres_movies ON movies.id = genres_movies.movie_id JOIN ratings ON movies.id = ratings.movie_id WHERE genres_movies.genre_id = (SELECT id FROM genres WHERE name = 'Sci-Fi') AND ratings.user_id IN (SELECT id FROM users WHERE gender = 'M' AND age = '24' AND occupation_id =(SELECT id FROM occupations WHERE name = 'Student')) AND ratings.rating = '5';

4. List the unique titles of each of the movies released on the most popular release day.
SELECT DISTINCT title FROM movies WHERE release_date = (SELECT release_date FROM MOVIES GROUP BY release_date ORDER BY COUNT(release_date) DESC LIMIT 1);

5. Find the total number of movies in each genre; list the results in ascending numeric order.
SELECT genres.name, COUNT(genres.name) FROM genres JOIN genres_movies ON genres.id=genres_movies.genre_id GROUP BY genres.name ORDER BY COUNT(genres.name) ASC;